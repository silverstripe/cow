version: '3.7'

x-build-args: &build-args
  USER_ID: ${USER_ID}
  GROUP_ID: ${GROUP_ID}

x-entrypoint: &entrypoint
  - /bin/bash
  - /app/docker/entrypoint.sh

x-volumes: &volumes
  - '..:/app'
  - './cache/composer:/home/cow/.composer'
  - '${GIT_CONFIG}:/home/cow/.gitconfig:ro'
  # - '${SSH_AUTH_SOCK}:${SSH_AUTH_SOCK}:rw'  # macOS socket is not writeable by non-root users
  - '~/.ssh:/home/cow/.ssh'

x-debug-env-var: &x-debug-env-var 'remote_enable=1 remote_mode=req remote_port=${XDEBUG_PORT} remote_host=${XDEBUG_HOST} remote_connect_back=0'

x-build-context: &build-context ''

x-wdir: &wdir /app

x-environment: &environment
  # SSH_AUTH_SOCK: ${SSH_AUTH_SOCK}
  XDEBUG_CONFIG: *x-debug-env-var
  USER_ID: ${USER_ID}
  GROUP_ID: ${GROUP_ID}


services:
  # Using the stable prebuilt image
  release:
    build:
      context: './release'
      args: *build-args
    working_dir: *wdir
    network_mode: 'host'
    volumes: *volumes
    entrypoint: *entrypoint
    environment: *environment

  # Build a new local image WITHOUT Xdebug and run localhost version of Cow in there
  dev:
    build:
      context: *build-context
      target: stable
      args: *build-args
    working_dir: *wdir
    network_mode: 'host'
    volumes: *volumes
    entrypoint: *entrypoint
    environment: *environment

  # Build a new local image WITH Xdebug and run localhost version of Cow in there
  debug:
    build:
      context: *build-context
      target: debug
      args: *build-args
    working_dir: *wdir
    network_mode: 'host'
    volumes: *volumes
    entrypoint: *entrypoint
    environment: *environment