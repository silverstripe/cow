<?php

namespace SilverStripe\Cow\Utility;

use SilverStripe\Cow\Model\Modules\Module;
use Symfony\Component\Console\Output\OutputInterface;

/**
 * Helper class for updating translations
 */
class Translations
{

    /**
     * Generate javascript for all modules
     *
     * @param CommandRunner $runner
     * @param Module[] $modules
     * @internal param Step $step
     * @internal param OutputInterface $output
     */
    public static function generateJavascript(CommandRunner $runner, $modules)
    {
        $runner->log("Generating javascript locale files");
        // Check which paths in each module require processing
        $count = 0;
        foreach ($modules as $module) {
            $base = $module->getMainDirectory();
            $jsPath = $module->getJSLangDirectories();
            foreach ((array)$jsPath as $path) {
                $count += static::generateJavascriptInDirectory($runner, $base, $path);
            }
        }
        $runner->log("Finished generating {$count} files");
    }


    /**
     * Process all javascript in a given path
     *
     * @param CommandRunner $runner
     * @param string $base Base directory of the module
     * @param string $path Path to the location of JS files
     * @return int Number of files generated
     * @internal param Step $step
     * @internal param OutputInterface $output
     */
    protected static function generateJavascriptInDirectory(CommandRunner $runner, $base, $path)
    {
        // Iterate through each source file
        $count = 0;
        $template = <<<TMPL
// This file was generated by silverstripe/cow from %FILE%.
// See https://github.com/silverstripe/cow for details
if (typeof(ss) === 'undefined' || typeof(ss.i18n) === 'undefined') {
  if (typeof(console) !== 'undefined') { // eslint-disable-line no-console
    console.error('Class ss.i18n not defined');  // eslint-disable-line no-console
  }
} else {
  ss.i18n.addDictionary('%LOCALE%', %TRANSLATIONS%);
}
TMPL;
        // Update each source file (js / json files)
        foreach (glob("{$path}/src/*.js*") as $sourceFile) {
            $count++;
            // Get contents and location
            $sourceArray = Config::loadFromFile($sourceFile);
            $sourceContents = Config::encodeContents($sourceArray);
            $locale = preg_replace('/\.js.*$/', '', basename($sourceFile));
            $targetFile = dirname(dirname($sourceFile)) . '/' . $locale . '.js';

            $runner->log("Generating file {$targetFile}", "info", OutputInterface::VERBOSITY_VERY_VERBOSE);

            file_put_contents(
                $targetFile,
                str_replace(
                    array(
                        '%TRANSLATIONS%',
                        '%FILE%',
                        '%LOCALE%'
                    ),
                    array(
                        $sourceContents,
                        substr($sourceFile, strlen($base) + 1), // Trim off base dir
                        $locale
                    ),
                    $template
                )
            );
        }
        return $count;
    }
}
